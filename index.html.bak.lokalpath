<html><head><base href="file:///Users/mwegel/private/git-repos/manweg.github.io/fotos">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lisa's Photography Portfolio</title>
<style>
  body, html {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    background-color: #f0f0f0;
  }
  header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 1rem;
  }
  h1 {
    margin: 0;
  }
  .gallery-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(100vh - 60px);
  }
  .gallery {
    position: relative;
    width: 80%;
    max-width: 800px;
    height: 70vh;
    overflow: hidden;
  }
  .photo {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease;
  }
  .photo.active {
    opacity: 1;
  }
  .photo img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  .caption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0,0,0,0.7);
    color: white;
    padding: 0.5rem;
    text-align: center;
  }
  .nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0,0,0,0.5);
    color: white;
    border: none;
    padding: 1rem;
    cursor: pointer;
    font-size: 1.5rem;
    transition: background-color 0.3s ease;
  }
  .nav-button:hover {
    background-color: rgba(0,0,0,0.8);
  }
  #prevBtn {
    left: 10px;
  }
  #nextBtn {
    right: 10px;
  }
</style>
</head>
<body>
  <header>
    <h1>Lisa's Photography Portfolio</h1>
  </header>
  
  <div class="gallery-container">
    <div id="gallery" class="gallery">
      <!-- Photos will be dynamically added here -->
    </div>
    <button id="prevBtn" class="nav-button">&#10094;</button>
    <button id="nextBtn" class="nav-button">&#10095;</button>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const gallery = document.getElementById('gallery');
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
      let currentIndex = 0;
      let photos = [];

      // Function to load images from the 'photos' directory
      function loadImages() {
        // In a real scenario, you'd need server-side code to read the directory
        // For this example, we'll simulate it with a fetch request to a JSON file
        fetch('photos.json')
          .then(response => response.json())
          .then(data => {
            photos = data;
            createPhotoElements();
            showPhoto(0);
          })
          .catch(error => console.error('Error loading photos:', error));
      }

      function createPhotoElements() {
        photos.forEach((photo, index) => {
          const photoDiv = document.createElement('div');
          photoDiv.className = 'photo';
          if (index === 0) photoDiv.classList.add('active');

          const img = document.createElement('img');
          img.src = `photos/${photo.filename}`;
          img.alt = photo.description || `Photo ${index + 1}`;
          img.width = 800;
          img.height = 600;

          const caption = document.createElement('div');
          caption.className = 'caption';
          caption.textContent = photo.caption || `Photo ${index + 1}`;

          photoDiv.appendChild(img);
          photoDiv.appendChild(caption);
          gallery.appendChild(photoDiv);
        });
      }

      function showPhoto(index) {
        const photoElements = document.querySelectorAll('.photo');
        photoElements.forEach((photo, i) => {
          if (i === index) {
            photo.classList.add('active');
          } else {
            photo.classList.remove('active');
          }
        });
      }

      function nextPhoto() {
        currentIndex = (currentIndex + 1) % photos.length;
        showPhoto(currentIndex);
      }

      function prevPhoto() {
        currentIndex = (currentIndex - 1 + photos.length) % photos.length;
        showPhoto(currentIndex);
      }

      nextBtn.addEventListener('click', nextPhoto);
      prevBtn.addEventListener('click', prevPhoto);

      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowRight') {
          nextPhoto();
        } else if (e.key === 'ArrowLeft') {
          prevPhoto();
        }
      });

      // Swipe navigation for touch devices
      let touchStartX = 0;
      let touchEndX = 0;

      document.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
      });

      document.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
      });

      function handleSwipe() {
        if (touchEndX < touchStartX) {
          nextPhoto();
        }
        if (touchEndX > touchStartX) {
          prevPhoto();
        }
      }

      // Load images when the page is ready
      loadImages();
    });
  </script>
</body>
</html>
